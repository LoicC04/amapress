<?php
/**
 * Created by PhpStorm.
 * User: Guillaume
 * Date: 20/05/2019
 * Time: 07:40
 */

class AmapDemoBase {
	protected $users = [ '0' => 0 ];
	protected $posts = [ '0' => 0 ];

	protected function createPost( $postarr ) {
		return wp_insert_post( $postarr );
	}

	protected function createUser( $userdata ) {
		return wp_insert_user( $userdata );
	}

	protected function startTransaction() {
		global $wpdb;
		$wpdb->query( 'START TRANSACTION' );
	}

	protected function commitTransaction() {
		global $wpdb;
		$wpdb->query( 'COMMIT' );
	}

	protected function abortTransaction() {
		global $wpdb;
		$wpdb->query( 'ROLLBACK' );
	}

	protected function deleteAutoGeneratedUsers() {
		$query = array(
			'meta_query' => array(
				array(
					'key'     => 'amapress_user_autogen',
					'compare' => 'EXISTS'
				)
			),
		);
		foreach ( get_users( $query ) as $user ) {
			wp_delete_user( $user->ID );
		}
	}

	protected function deletePostsByType( $post_types ) {
		foreach (
			get_posts( [
				'post_type' => $post_types
			] ) as $post
		) {
			wp_delete_post( $post->ID, true );
		}
	}

	protected function deleteAutoGeneratedPosts() {
		$this->deletePostsByType( [
			AmapressVisite::INTERNAL_POST_TYPE,
			AmapressProduit::INTERNAL_POST_TYPE,
			AmapressAmap_event::INTERNAL_POST_TYPE,
			AmapressAssemblee_generale::INTERNAL_POST_TYPE,
			AmapressRecette::INTERNAL_POST_TYPE,
			AmapressPanier::INTERNAL_POST_TYPE,
			AmapressDistribution::INTERNAL_POST_TYPE,
			AmapressAdhesionPeriod::INTERNAL_POST_TYPE,
			AmapressAdhesion::INTERNAL_POST_TYPE,
			AmapressAmapien_paiement::INTERNAL_POST_TYPE,
			AmapressLieu_distribution::INTERNAL_POST_TYPE,
			AmapressContrat_quantite::INTERNAL_POST_TYPE,
			AmapressContrat::INTERNAL_POST_TYPE,
			AmapressContrat_instance::INTERNAL_POST_TYPE
		] );
	}

	protected function onCreateAmap( $now ) {

	}

	public function createAMAP() {
		$this->startTransaction();

		try {
			$this->deleteAutoGeneratedUsers();

			$this->deleteAutoGeneratedPosts();

			$this->onCreateAmap( amapress_time() );

			amapress_update_all_posts();

		} catch ( Exception $exception ) {
			$this->abortTransaction();
		}
	}

	function insertPostFromBitsBase64( $bits_base64, $bits_name, $parent_post_id = null ) {
		return $this->insertPostFromBits( base64_decode( $bits_base64 ), $bits_name, $parent_post_id );
	}

	function insertPostFromBits( $bits, $bits_name, $parent_post_id = null ) {
		$upload = wp_upload_bits( $bits_name, null, $bits );
		if ( ! empty( $upload['error'] ) ) {
			return false;
		}
		$file_path        = $upload['file'];
		$file_name        = basename( $file_path );
		$file_type        = wp_check_filetype( $file_name, null );
		$attachment_title = sanitize_file_name( pathinfo( $file_name, PATHINFO_FILENAME ) );
		$wp_upload_dir    = wp_upload_dir();
		$post_info        = array(
			'guid'           => $wp_upload_dir['url'] . '/' . $file_name,
			'post_mime_type' => $file_type['type'],
			'post_title'     => $attachment_title,
			'post_content'   => '',
			'post_status'    => 'inherit',
		);
		// Create the attachment
		$attach_id = wp_insert_attachment( $post_info, $file_path, $parent_post_id );
		// Include image.php
		require_once( ABSPATH . 'wp-admin/includes/image.php' );
		// Define attachment metadata
		$attach_data = wp_generate_attachment_metadata( $attach_id, $file_path );
		// Assign metadata to attachment
		wp_update_attachment_metadata( $attach_id, $attach_data );

		return $attach_id;
	}
}